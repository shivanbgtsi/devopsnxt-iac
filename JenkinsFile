pipeline {
    agent any
    parameters {
        choice(choices: ['Deploy', 'Destroy'], description: 'Deploy or Destroy Infra', name:'deployOrDestroy')
    }
    stages {
        stage('Check terraform version') {
            steps {
                sh 'terraform -v'
                sh 'rm -rf  .terraform*'
            }
        }
        stage('terraform init') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS_Creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'terraform init'
            }
        }
        }
        stage('terraform plan') {
            when {
                expression {deployOrDestroy == 'Deploy'}
            }
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS_Creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'terraform plan'
            }
        }
        }
        stage('terraform apply') {
            when {
                expression {deployOrDestroy == 'Deploy'}
            }
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS_Creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'terraform apply --auto-approve'
            }
        }
        }
        stage('terraform apply') {
            when {
                expression {deployOrDestroy == 'Deploy'}
            }
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS_Creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                sh 'terraform apply --auto-approve'
            }
         }
        }
    }
}
